name: Terraform

on:
  push:
    branches:
      - DEVOPS_Exercise_Statement_2  # Trigger on pushes to this branch      

jobs:
  terraform-local:
    name: Terraform Local Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/DEVOPS_Exercise_Statement_2' && github.event_name == 'push'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Package Lambda Function
      run: |
        mkdir -p package
        cp DEVOPS_Exercise_Statement_2/python_random_data/generate_random_data.py package/
        cd package
        zip -r ../DEVOPS_Exercise_Statement_2/terraform_setup/lambda_function_payload.zip .
        cd ..
        rm -rf package
      working-directory: ${{ github.workspace }}

    - name: Setup Terraform for Local
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.9

    - name: Terraform Init (Local)
      run: terraform init
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup

    - name: Terraform Apply (Local)
      run: terraform apply -auto-approve -var 'deployment_type=local'
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup

    - name: Terraform Output (Local)
      run: terraform output
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup

  terraform-aws:
    name: Terraform AWS Deploy
    runs-on: ubuntu-latest
    needs: terraform-local
    if: github.ref == 'refs/heads/DEVOPS_Exercise_Statement_2' && github.event_name == 'push'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform for AWS
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.9

    - name: Terraform Init (AWS)
      run: terraform init
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup

    - name: Terraform Apply (AWS)
      run: terraform apply -auto-approve -var 'deployment_type=aws'
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup

    - name: Terraform Output (AWS)
      run: terraform output
      working-directory: DEVOPS_Exercise_Statement_2/terraform_setup
